version: '3.8'

services:
  # ECPS Gateway (Python)
  gateway:
    build:
      context: .
      dockerfile: Dockerfile.gateway
    container_name: ecps-gateway
    restart: unless-stopped
    ports:
      - "8080:8080"  # Main API
      - "8000:8000"  # Metrics
    environment:
      - ECPS_ENV=production
      - ECPS_LOG_LEVEL=INFO
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
    volumes:
      - ./config:/app/config:ro
      - ./logs:/app/logs
      - ./data:/app/data
    networks:
      - ecps-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Robot Controller (Go)
  robot-controller:
    build:
      context: .
      dockerfile: Dockerfile.robot
    container_name: ecps-robot-controller
    restart: unless-stopped
    ports:
      - "8081:8081"  # Main API
      - "8001:8001"  # Metrics
    environment:
      - ECPS_ENV=production
      - ECPS_LOG_LEVEL=INFO
      - ECPS_GATEWAY_ENDPOINT=gateway:8080
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    depends_on:
      - gateway
    networks:
      - ecps-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for caching and pub/sub
  redis:
    image: redis:7-alpine
    container_name: ecps-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - ecps-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MQTT Broker for messaging
  mosquitto:
    image: eclipse-mosquitto:2
    container_name: ecps-mosquitto
    restart: unless-stopped
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - mosquitto-data:/mosquitto/data
      - mosquitto-logs:/mosquitto/log
    networks:
      - ecps-network
    healthcheck:
      test: ["CMD", "mosquitto_pub", "-h", "localhost", "-t", "test", "-m", "test"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: ecps-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - ecps-network

volumes:
  redis-data:
  mosquitto-data:
  mosquitto-logs:
  prometheus-data:

networks:
  ecps-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16